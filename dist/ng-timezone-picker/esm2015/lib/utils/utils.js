export function findValue(key, value, data) {
    var referObj = [];
    data.filter(function (object) {
        if (object[key] === value) {
            referObj.push(Object.assign({}, object));
            return object;
        }
    });
    referObj.forEach((timezone) => {
        delete timezone.points;
        delete timezone.pin;
    });
    return referObj;
}
export function generateElement({ element, attr, chilled = false, isSvg = false }) {
    let elementObject;
    if (isSvg) {
        elementObject = document.createElementNS('http://www.w3.org/2000/svg', element);
    }
    else {
        elementObject = document.createElement(element);
    }
    if (attr) {
        Object.keys(attr).forEach((key) => {
            elementObject.setAttribute(key, attr[key]);
        });
    }
    if (chilled) {
        if (chilled instanceof Array) {
            chilled.forEach((chilleds) => {
                elementObject.appendChild(chilled[chilleds]);
            });
        }
        else if (typeof chilled == 'string') {
            elementObject.innerHTML = chilled;
        }
        else {
            elementObject.appendChild(chilled);
        }
    }
    return elementObject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy10aW1lem9uZS1waWNrZXIvIiwic291cmNlcyI6WyJsaWIvdXRpbHMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsTUFBTSxVQUFVLFNBQVMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUk7SUFDeEMsSUFBSSxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBUyxNQUFNO1FBQ3pCLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEtBQUssRUFBRTtZQUN6QixRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDekMsT0FBTyxNQUFNLENBQUM7U0FDZjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0gsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO1FBQzVCLE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUN2QixPQUFPLFFBQVEsQ0FBQyxHQUFHLENBQUM7SUFDdEIsQ0FBQyxDQUFDLENBQUE7SUFDRixPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDO0FBU0QsTUFBTSxVQUFVLGVBQWUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxHQUFHLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxFQUF1QjtJQUNwRyxJQUFJLGFBQWEsQ0FBQztJQUNsQixJQUFJLEtBQUssRUFBRTtRQUNULGFBQWEsR0FBRyxRQUFRLENBQUMsZUFBZSxDQUFDLDRCQUE0QixFQUFFLE9BQU8sQ0FBQyxDQUFDO0tBQ2pGO1NBQU07UUFDTCxhQUFhLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNqRDtJQUNELElBQUksSUFBSSxFQUFFO1FBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNoQyxhQUFhLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM3QyxDQUFDLENBQUMsQ0FBQztLQUNKO0lBQ0QsSUFBSSxPQUFPLEVBQUU7UUFDWCxJQUFJLE9BQU8sWUFBWSxLQUFLLEVBQUU7WUFDNUIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO2dCQUMzQixhQUFhLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQy9DLENBQUMsQ0FBQyxDQUFDO1NBQ0o7YUFBTSxJQUFJLE9BQU8sT0FBTyxJQUFJLFFBQVEsRUFBRTtZQUNyQyxhQUFhLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQztTQUNuQzthQUFNO1lBQ0wsYUFBYSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNwQztLQUNGO0lBQ0QsT0FBTyxhQUFhLENBQUM7QUFDdkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgVGltZXpvbmUge1xuICB0aW1lem9uZTogc3RyaW5nO1xuICBjb3VudHJ5OiBzdHJpbmc7XG4gIHBpbj86IHN0cmluZztcbiAgb2Zmc2V0OiBudW1iZXI7XG4gIHBvaW50cz86IHN0cmluZztcbiAgem9uZW5hbWU6IHN0cmluZztcbiAgc2VsZWN0ZWQ/OiBib29sZWFuO1xuICBzYW1lT2Zmc2V0PzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRWYWx1ZShrZXksIHZhbHVlLCBkYXRhKTogQXJyYXk8VGltZXpvbmU+IHtcbiAgdmFyIHJlZmVyT2JqID0gW107XG4gIGRhdGEuZmlsdGVyKGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIGlmIChvYmplY3Rba2V5XSA9PT0gdmFsdWUpIHtcbiAgICAgIHJlZmVyT2JqLnB1c2goT2JqZWN0LmFzc2lnbih7fSwgb2JqZWN0KSk7XG4gICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cbiAgfSk7XG4gIHJlZmVyT2JqLmZvckVhY2goKHRpbWV6b25lKSA9PiB7XG4gICAgZGVsZXRlIHRpbWV6b25lLnBvaW50cztcbiAgICBkZWxldGUgdGltZXpvbmUucGluO1xuICB9KVxuICByZXR1cm4gcmVmZXJPYmo7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2VuZXJhdGVFbGVtZW50QXJncyB7XG4gIGVsZW1lbnQ6IGFueTtcbiAgYXR0cj86IHtba2V5OiBzdHJpbmddOiBhbnl9O1xuICBjaGlsbGVkPzogYm9vbGVhbiB8IG51bWJlciB8IHN0cmluZyB8IEFycmF5PGFueT47XG4gIGlzU3ZnPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlRWxlbWVudCh7IGVsZW1lbnQsIGF0dHIsIGNoaWxsZWQgPSBmYWxzZSwgaXNTdmcgPSBmYWxzZSB9OiBHZW5lcmF0ZUVsZW1lbnRBcmdzKSB7XG4gIGxldCBlbGVtZW50T2JqZWN0O1xuICBpZiAoaXNTdmcpIHtcbiAgICBlbGVtZW50T2JqZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsIGVsZW1lbnQpO1xuICB9IGVsc2Uge1xuICAgIGVsZW1lbnRPYmplY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGVsZW1lbnQpO1xuICB9XG4gIGlmIChhdHRyKSB7XG4gICAgT2JqZWN0LmtleXMoYXR0cikuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBlbGVtZW50T2JqZWN0LnNldEF0dHJpYnV0ZShrZXksIGF0dHJba2V5XSk7XG4gICAgfSk7XG4gIH1cbiAgaWYgKGNoaWxsZWQpIHtcbiAgICBpZiAoY2hpbGxlZCBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICBjaGlsbGVkLmZvckVhY2goKGNoaWxsZWRzKSA9PiB7XG4gICAgICAgIGVsZW1lbnRPYmplY3QuYXBwZW5kQ2hpbGQoY2hpbGxlZFtjaGlsbGVkc10pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY2hpbGxlZCA9PSAnc3RyaW5nJykge1xuICAgICAgZWxlbWVudE9iamVjdC5pbm5lckhUTUwgPSBjaGlsbGVkO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50T2JqZWN0LmFwcGVuZENoaWxkKGNoaWxsZWQpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZWxlbWVudE9iamVjdDtcbn1cbiJdfQ==