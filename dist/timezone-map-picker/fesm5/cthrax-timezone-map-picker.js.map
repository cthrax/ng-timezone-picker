{"version":3,"file":"cthrax-timezone-map-picker.js","sources":["ng://@cthrax/timezone-map-picker/lib/timezone-map-picker.service.ts","ng://@cthrax/timezone-map-picker/lib/timezone-map-picker.component.ts","ng://@cthrax/timezone-map-picker/lib/world-svg/world-svg.component.ts","ng://@cthrax/timezone-map-picker/lib/timezone-map-picker.module.ts","ng://@cthrax/timezone-map-picker/public-api.ts","ng://@cthrax/timezone-map-picker/cthrax-timezone-map-picker.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\nimport timezones from './timezones.json';\nimport moment from 'moment-timezone';\nimport {Timezone} from './types';\n\nfunction getMiddle(first, last) {\n  return Math.floor((last + first) / 2);\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimezoneMapPickerService {\n  public timezones: Array<Timezone>;\n  constructor() {\n    // Copy it out so no one mucks with the original list\n    this.timezones = timezones.map((t) => Object.assign({}, t));\n    // Sort the list for each of searching\n    this.timezones.sort((left, right) => {\n      if (left.timezone < right.timezone) {\n        return -1;\n      } else if (left.timezone > right.timezone) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  public hovered: Timezone = null;\n  private _selected = null;\n\n  public get selected(): Timezone {\n    return this._selected;\n  }\n\n  public set selected(timezone) {\n    this.setTimezoneSelected(timezone);\n  }\n\n  public getFullTimezoneList() {\n    return this.timezones;\n  }\n\n  getTimeZoneObject(value, attribute?): Timezone {\n    return this.findTimezone(attribute ? attribute : 'timezone', value);\n  }\n\n  getSystemTimezone(): Timezone {\n    return this.getTimeZoneObject(moment.tz.guess());\n  }\n\n  unselectCurrent() {\n    this.timezones.some((timezone) => {\n      if (timezone.selected === true) {\n        timezone.selected = false;\n        return true;\n      }\n      return false;\n    });\n    this._selected = null;\n  }\n\n  setTimezoneSelected(timezone: Timezone) {\n    this.unselectCurrent();\n    if (!!timezone) {\n      timezone.selected = true;\n    }\n    this._selected = timezone;\n  }\n\n  setTimezoneByKey(zonename: string) {\n    if (!zonename) {\n      return;\n    }\n    this.unselectCurrent();\n\n    const timezone = this.findTimezone('timezone', zonename);\n    timezone.selected = true;\n    this._selected = timezone;\n  }\n\n  findTimezone(key, value): Timezone {\n    let first = 0;\n    let last = this.timezones.length - 1;\n    let middle = getMiddle(first, last);\n\n    while (first <= last) {\n      if (value < this.timezones[middle][key]) {\n        last = middle - 1;\n        middle = getMiddle(first, last);\n      } else if (value > this.timezones[middle][key]) {\n        first = middle + 1;\n        middle = getMiddle(first, last);\n      } else {\n        return this.timezones[middle];\n      }\n    }\n\n    return null;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TimezoneMapPickerService} from './timezone-map-picker.service';\nimport {Timezone} from './types';\n\n@Component({\n  selector: 'cth-timezone-map-picker',\n  templateUrl: './timezone-map-picker.component.html',\n  styles: []\n})\nexport class TimezoneMapPickerComponent implements OnInit {\n  public timezones;\n\n  @Input() public defaultTimezone: string = null;\n  @Input() public width = 100;\n  @Input() public height = 50;\n\n  @Output() public timezoneSelected: EventEmitter<Timezone> = new EventEmitter<Timezone>();\n  @Output() public hoverChanged: EventEmitter<Timezone> = new EventEmitter<Timezone>();\n\n  public get dimensions() {\n    return {\n      height: this.height,\n      width: this.width\n    };\n  }\n\n  constructor(private timezoneService: TimezoneMapPickerService) {\n    this.timezones = this.timezoneService.getFullTimezoneList();\n  }\n\n  public timezoneAreaSelected(timezone: Timezone) {\n    this.timezoneSelected.emit(timezone);\n  }\n\n  public timezoneHoverChanged(timezone: Timezone) {\n    this.hoverChanged.emit(timezone);\n  }\n\n  ngOnInit() {\n    if (!this.defaultTimezone) {\n      const systemTimezone = this.timezoneService.getSystemTimezone();\n\n      if (!!systemTimezone) {\n        this.defaultTimezone = systemTimezone.timezone;\n      }\n    }\n\n    this.timezoneService.setTimezoneByKey(this.defaultTimezone);\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {TimezoneMapPickerService} from '../timezone-map-picker.service';\nimport {Timezone} from '../types';\n\n@Component({\n  selector: 'cth-world-svg',\n  templateUrl: './world-svg.component.html',\n  styleUrls: ['./world-svg.component.less']\n})\nexport class WorldSvgComponent implements OnInit {\n\n  public timezones: Array<Timezone>;\n  @Input() public width: number;\n  @Input() public height: number;\n  @Input() public defaultTimezone: string;\n\n  @Output() public timezoneSelected: EventEmitter<Timezone> = new EventEmitter<Timezone>();\n  @Output() public hoverChanged: EventEmitter<Timezone> = new EventEmitter<Timezone>();\n\n  public get viewBox() {\n    return `0 0 ${this.width || 0} ${this.height || 0}`;\n  }\n\n  constructor(private timezoneService: TimezoneMapPickerService) {\n    this.timezones = this.timezoneService.getFullTimezoneList();\n  }\n\n  ngOnInit() {\n    if (!!this.defaultTimezone) {\n      this.timezoneService.setTimezoneByKey(this.defaultTimezone);\n    }\n  }\n\n  areaSelected(timezone) {\n    this.timezoneService.setTimezoneSelected(timezone);\n    this.timezoneSelected.emit(timezone);\n  }\n\n  mouseEnter(selected) {\n    this.timezoneService.hovered = selected;\n    this.hoverChanged.emit(selected);\n    this.timezones.forEach((timezone) => {\n      timezone.sameOffset = timezone.offset === selected.offset;\n    });\n  }\n\n  mouseLeave(selected) {\n    this.timezoneService.hovered = null;\n    this.hoverChanged.emit(null);\n    this.timezones.forEach((timezone) => {\n      timezone.sameOffset = false;\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {TimezoneMapPickerComponent} from './timezone-map-picker.component';\nimport {WorldSvgComponent} from './world-svg/world-svg.component';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  declarations: [TimezoneMapPickerComponent, WorldSvgComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [TimezoneMapPickerComponent]\n})\nexport class TimezoneMapPickerModule { }\n","/*\n * Public API Surface of timezone-map-picker\n */\n\nexport * from './lib/timezone-map-picker.service';\nexport * from './lib/timezone-map-picker.component';\nexport * from './lib/timezone-map-picker.module';\nexport * from './lib/types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {WorldSvgComponent as Éµa} from './lib/world-svg/world-svg.component';"],"names":["tslib_1.__decorate"],"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"}